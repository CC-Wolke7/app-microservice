name: Deployment

on: [workflow_dispatch]

env:
  GITHUB_TOKEN: ${{ github.token }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  IMAGE_NAME: app-microservice
  IMAGE_VERSION: ${{ github.sha }}
  STATIC_FILES_BUCKET: app-api-staticfiles

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/marketplace/actions/cancel-workflow-action
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ env.GITHUB_TOKEN }}

      - name: Checkout source code
        uses: actions/checkout@v2

      # https://github.com/google-github-actions/setup-gcloud/
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install Google Cloud SDK beta components
        run: gcloud components install beta

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and push container image to Google Cloud Registry
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker tag ${{ env.IMAGE_NAME }}:latest gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      - name: Collect static files
        run: |
          docker run --rm -e DJANGO_ENVIRONMENT='minimal' -v $(pwd)/static:/app/app_microservice/app_microservice/static --entrypoint python ${{ env.IMAGE_NAME }} manage.py collectstatic --no-input

      - name: Upload static files
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ./static
          destination: ${{ env.STATIC_FILES_BUCKET }}

      - name: Update deployment specification
        uses: danielr1996/envsubst-action@1.0.0
        env:
          GCP_PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
        with:
          input: app.service.yaml
          output: app.service.tmp.yaml

      - name: Deploy to Google Cloud Run
        run: gcloud beta run services replace app.service.tmp.yaml --platform managed --region europe-west3
